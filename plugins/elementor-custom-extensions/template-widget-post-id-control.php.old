<?php
/**
 * Add a custom control for specifying the post_id in the Elementor template widget.
 */

 namespace YourNamespace\CustomElementor;

use ElementorPro\Modules\Library\Widgets\Template as ElementorProTemplate;

// if ( ! defined( 'ABSPATH' ) ) {
//     exit; // Exit if accessed directly.
// }

class Elementor_Template_Post_ID_Control extends ElementorProTemplate {

    public function __construct() {
        BugFu::log('Elementor_Template_Post_ID_Control');
        // Hook into Elementor's widget registration
        add_action( 'elementor/element/template/section_template/before_section_end', [ $this, 'add_post_id_control' ], 10, 2 );
        add_action( 'elementor/frontend/widget/before_render', [ $this, 'before_template_render' ] );
        // Register the custom JavaScript for this widget
        wp_register_script( 
            'template-widget-post-id-control-js', // Script handle
            plugin_dir_url( __FILE__ ) . 'js/template-widget-post-id-control.js', // Path to JS file
            [ 'jquery', 'elementor-frontend' ], // Dependencies
            null, // Version
            true // Load in footer
        );
    }

    // Specify which scripts should be enqueued when this widget is used
    public function get_script_depends() {
        return [ 'template-widget-post-id-control-js' ]; // Return the handle of the registered script
    }

    // Add the custom post_id control
    protected function register_controls() {
        // Call the parent controls first to include all original controls
        parent::register_controls();

        // Add a new control for specifying the Post ID
        $this->add_control(
            'custom_post_id',
            [
                'label' => __( 'Custom Post ID', 'your-text-domain' ),
                'type' => \Elementor\Controls_Manager::TEXT,
                'dynamic' => [
                    'active' => true, // Enable dynamic tags for this field
                ],
                'description' => __( 'Enter a specific post ID to dynamically load content.', 'your-text-domain' ),
            ]
        );
    }

    // Modify the render method to handle the custom post_id logic
    public function render() {
        // Get the post ID from the widget settings
        $settings = $this->get_settings_for_display();
        $custom_post_id = $settings['custom_post_id'];

        // If a custom post ID is set, load the content for that post
        if ( ! empty( $custom_post_id ) && is_numeric( $custom_post_id ) ) {
            global $post;
            $post = get_post( $custom_post_id );
            setup_postdata( $post );
        }

        // Render the template widget as usual
        echo '<div class="custom-template-wrapper">';
        parent::render(); // Call the original render method
        echo '</div>';

        // Reset the post data after rendering
        if ( ! empty( $custom_post_id ) && is_numeric( $custom_post_id ) ) {
            wp_reset_postdata();
        }
    }

    // Add a control for post_id in the template widget
    // public function add_post_id_control( $element, $args ) {
    //     $element->add_control(
    //         'custom_post_id',
    //         [
    //             'label' => __( 'Post ID', 'my-elementor-extension' ),
    //             'type' => \Elementor\Controls_Manager::TEXT,
    //             'dynamic' => [
    //                 'active' => true, // Enable dynamic tags for this field
    //             ],
    //             'default' => '',
    //             'description' => __( 'Enter a specific post ID to use for dynamic content fields or use dynamic tags.', 'my-elementor-extension' ),
    //         ]
    //     );
    // }

    // Modify the query to use the specified post_id before rendering
    // public function before_template_render( \Elementor\Element_Base $element ) {
    //     if ( 'template' === $element->get_name() ) {
    //         $settings = $element->get_settings_for_display();
    //         $post_id = $this->get_post_id_from_url();

    //         // If no post_id is found in the URL, do not render the template
    //         if ( empty( $post_id ) || ! is_numeric( $post_id ) ) {
    //             // Prevent rendering of the section
    //             $element->add_render_attribute( '_wrapper', 'style', 'display:none;' );
    //             return;
    //         }

    //         // If a valid post_id exists, update the global post object
    //         if ( ! empty( $post_id ) && is_numeric( $post_id ) ) {
    //             global $post;
    //             $post = get_post( $post_id );
    //             setup_postdata( $post );
    //         }
    //     }
    // }

    // Function to retrieve the post ID from the URL (i.e., ?pid=123)
    // public function get_post_id_from_url() {
    //     if ( isset( $_GET['pid'] ) && is_numeric( $_GET['pid'] ) ) {
    //         return intval( $_GET['pid'] );
    //     }
    //     return false; // Return false if no valid post_id is found
    // }
}

// Instantiate the control class
// new Elementor_Template_Post_ID_Control();
